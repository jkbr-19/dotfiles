#!/bin/bash

# _               _         _   _        __ _ 
#| |__   ___ _ __| |__  ___| |_| |_   _ / _| |___      ___ __ ___ 
#| '_ \ / _ \ '__| '_ \/ __| __| | | | | |_| __\ \ /\ / / '_ ` _ \ 
#| | | |  __/ |  | |_) \__ \ |_| | |_| |  _| |_ \ V  V /| | | | | | 
#|_| |_|\___|_|  |_.__/|___/\__|_|\__,_|_|  \__| \_/\_/ |_| |_| |_| 

# this is my config for herbstluftwm

hc() {
    herbstclient "$@"
}

hc emit_hook reload

#xsetroot -solid '#5A8E3A'
nitrogen --restore &
#[[ -z $(pgrep -xU compton) ]] && compton --sw-opti &

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close
hc keybind $Mod-Return spawn "${TERMINAL:-xterm}" # use your $TERMINAL with xterm as fallback
#

# basic movement
# focusing clients
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if [ -n "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle

# select layouts
hc keybind $Mod-Control-g set_layout grid
hc keybind $Mod-Control-v set_layout vertical
hc keybind $Mod-Control-m set_layout max
hc keybind $Mod-Control-z set_layout horizontal

# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

hc set default_frame_layout 2

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_frame +1
hc keybind $Mod-Shift-Tab   cycle_frame -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#83213A'
hc set frame_border_width 0
hc set frame_border_inner_width 0
hc set always_show_frame 1
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc keybind $Mod-Control-i cycle_value frame_transparent_width 0 3
hc set frame_gap 0

hc attr theme.active.color '#CAA9FA'
hc attr theme.normal.color '#454545'
hc attr theme.urgent.color '#faf08e'
hc attr theme.inner_width 1
hc attr theme.inner_color black
hc attr theme.border_width 2
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#41455e'
hc attr theme.active.outer_color '#41455e'
hc attr theme.background_color '#141414'

hc set window_gap 9
hc keybind $Mod-Control-f cycle_value window_gap 0 4 9
hc set frame_padding 0
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule class=Steam tag=3 pseudotile=on
hc rule class=Lutris tag=3 pseudotile=on

# unlock, just to be sure
hc unlock

herbstclient set tree_style '╾│ ├└╼─┐'

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
#hc detect_monitors

#when switching tags, moves the wanted tag to the focused monitor
hc set swap_monitor_to_get_tag 1
# if set detect_monitors is automatically executed upon connected, disconnect or resize of monitors
hc set auto_detect_monitors 1

#Automatic split arangement of first tag
hc load 1 '(split horizontal:0.500000:1 (clients max:0 0x1600003) (split vertical:0.500000:0 (clients max:0 0x1000006) (clients max:0 0x2200001)))'
hc load 3 '(clients max:1 0x2400027 0x4200006)'

#Eigene Commands
hc keybind $Mod-b spawn "$BROWSER"
#hc keybind $Mod-d spawn ~/.config/polybar/scripts/rofi-launch.sh
hc keybind $Mod-d spawn dmenu_run_hlwm
hc keybind $Mod-e spawn st ranger 
hc keybind $Mod-w spawn st weechat
hc keybind $Mod-t spawn st gotop
hc keybind $Mod-Shift-s spawn xfce4-screenshooter
hc keybind $Mod-m spawn st vimpc
hc keybind $Mod-Shift-m spawn ~/.Skripten/music_menu.sh

#Compositor
hc keybind $Mod-Control-c spawn killall compton

hc keybind XF86WLAN spawn ~/.Skripten/wifi-toggle.sh
#Media Key
hc keybind XF86AudioPlay spawn mpc toggle
hc keybind XF86AudioStop spawn mpc stop
hc keybind XF86AudioNext spawn mpc next
hc keybind XF86AudioPrev spawn mpc prev
hc keybind XF86AudioMute spawn pactl set-sink-mute 0 toggle
hc keybind XF86AudioRaiseVolume spawn pactl set-sink-volume 0 +2%
hc keybind XF86AudioLowerVolume spawn pactl set-sink-volume 0 -2%

# find the panel
panel=~/.config/polybar/launch.sh
#panel=/etc/xdg/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
hc pad 0 19
"$panel" &
if hc silent new_attr bool my_not_first_autostart ; then
	hc spawn st
fi
